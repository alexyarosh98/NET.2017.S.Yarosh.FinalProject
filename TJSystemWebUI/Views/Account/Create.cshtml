@model BLLInterface.Models.UserEntity
@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <fieldset>
        @Html.LabelFor(x=>x.Nickname)
        @Html.EditorFor(x=>x.Nickname)
        @Html.ValidationMessageFor(x=>x.Nickname)
        <br/>
        @Html.LabelFor(x=>x.Password)
        @Html.EditorFor(x => x.Password)
        @Html.ValidationMessageFor(x => x.Password)
        <br/>
        @Html.LabelFor(x => x.PasswordConfirm)
        @Html.EditorFor(x => x.PasswordConfirm)
        <br/>
        @Html.LabelFor(x => x.Email)
        @Html.EditorFor(x => x.Email)
        @Html.ValidationMessageFor(x => x.Email)
        <br/>
        @Html.LabelFor(x => x.Firstname)
        @Html.EditorFor(x => x.Firstname)
        @Html.ValidationMessageFor(x => x.Firstname)
        <br/>
        @Html.LabelFor(x => x.Lastname)
        @Html.EditorFor(x => x.Lastname)
        @Html.ValidationMessageFor(x => x.Lastname)
        <br/>
        @Html.LabelFor(x => x.Age)
        @Html.EditorFor(x => x.Age)
        @Html.ValidationMessageFor(x => x.Age)
        <br/>
        @Html.LabelFor(x => x.Gender)
        @Html.DropDownList("Gender", new SelectList(new[] 
        { new { Id = true, Name = "man" }, new { Id = false, Name = "woman" } }, "Id", "Name"), "")<br />
        <input type="submit" value="Register" />
    </fieldset>*@

    <div class="form-horizontal">
        <h2>Registeration</h2>
        <h6 >*fields with a star are required</h6>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nickname,"Nickname*" ,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password,"Password*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirm, "Confirm Password*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email,"Email*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", new SelectList(new[]
                { new { Id = true, Name = "man" }, new { Id = false, Name = "woman" } }, "Id", "Name"), "select", new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" value="Register" />
    </div>



}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}