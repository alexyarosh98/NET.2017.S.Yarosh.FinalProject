@model BLLInterface.Models.TaskEntity

@{
    var ajaxOptions=new AjaxOptions()
    {
        //Url = Url.Action("_UpdateTask",Model),
        UpdateTargetId = Model.Id.ToString(),
        InsertionMode = InsertionMode.Replace

        
    };
}

@using (Ajax.BeginForm("_UpdateTask",ajaxOptions))
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Category, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(x => x.Description, new {htmlAttributes = new {@class = "form-control"}}))
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Deadline, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Deadline)
                @Html.ValidationMessageFor(model => model.Deadline, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <input type="submit" value="Update"/>
}